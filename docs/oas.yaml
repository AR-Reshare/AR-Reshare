# NOTE: There are returns that have unneccessary information in them
openapi: 3.1.0

info:
  title: AR Reshare Application
  license:
    url: https://example.com
    name: License to be decided by client
  summary: A donation marketplace with augmented reality features
  description: This document describes how the front-end and back-end segments will communicate with each other
  contact:
    name: Davide Correia
    email: rlrt51@durham.ac.uk
  version: 0.2.0


servers:
- url: /
  description: The url will be filled out as we push through development


security:
  - bearerAuth:
    - token


paths:
  /:
    get:
      operationId: getHomePage
      summary: getHomePage
      description: Returns the API specification page
      security: []
      responses:
        '200':
          description: The page is succesfully returned


  /token/regeneration:
    post:
      operationId: requestRegeneratedToken
      summary: requestRegeneratedToken
      description: Regenerates a new token based off of a currently valid token (that is about to expire)
      responses:
        '201':
          $ref: 'responses.yaml#/components/responses/token-regeneration'
        '400':
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401':
          $ref: 'responses.yaml#/components/responses/unauthorised'


  /passwordResetRequest:
    post:
      operationId: requestPasswordReset
      summary: requestPasswordReset
      description: Sends a password reset email to the corresponding email if it exists
      security: []
      responses:
        '501':
          description: This action is not yet supported
      #   '200':
      #     description: The request was processed without any exceptions (The email may or may not exist in the db)
      #   '400':
      #     description: The email provided was of an invalid format
      # requestBody:
      #   $ref: 'requestBodies.yaml#/components/requestBodies/password-reset-request'


  ## I was considering splitting this up into two but want to reduce the number of endpoints
  /passwordResetExecute:
    post:
      operationId: executePasswordReset
      summary: executePasswordReset
      description: Executes the password reset if the tokens are valid
      responses:
        '501':
          description: This action is not yet supported
      #   '200':
      #     description: The request was executed successfully and the account's password has now been changed
      #   '400':
      #     description: The arguments were of invalid formats
      # requestBody:
      #   $ref: 'requestBodies.yaml#/components/requestBodies/password-reset-execute'


  /categories/list:
    get:
      operationId: getCategoryDescriptors
      summary: getCategoryDescriptors
      description: Retrieves the currently available categories
      security: []
      responses:
        '200':
          $ref: 'responses.yaml#/components/responses/categories-list'


  ################################### ACCOUNT PATH ITEM OBJECTS ########################################
  /account/create:
    put:
      operationId: createAccount
      summary: createAccount
      description: Creates an account with request arguments
      security: []
      responses:
        '201': # Succesfully created
          $ref: 'responses.yaml#/components/responses/account-create'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '409': # Conflict
          $ref: 'responses.yaml#/components/responses/conflict-email'
        '422': # Unprocessable Entity
          $ref: 'responses.yaml#/components/responses/unprocessable'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/account-signup'


  /account/close:
    patch: # not delete
      operationId: closeAccount
      summary: closeAccount
      description: Closes the current account (some info is required by law to be retained). The 'current' account is the one the user is logged in as.
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/account-close'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised-password'
        '409': # Conflict
          description: The account is already queued for close
          $ref: 'responses.yaml#/components/responses/conflict-close'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/account-close'


  /account/login:
    post:
      operationId: loginAccount
      summary: loginAccount
      description: Login in to the requested account using request arguments
      security: []
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/account-login'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised-creds'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/account-login'


  /account/modify:
    patch:
      operationId: modifyAccount
      summary: modifyAccount
      description: Modifies the details of the current account
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/account-modify'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised-password'
        '422': # Unprocessable Entity
          $ref: 'responses.yaml#/components/responses/unprocessable'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/account-modify'


  /account/listing/view:
    get:
      operationId: getAccountListingByID
      summary: getAccountListingByID
      description: Returns the listing which matches the value of the parameter "listingID"
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/listing-private'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/listingID'


  /account/listings/search:
    get:
      operationId: searchAccountListings
      summary: searchAccountListings
      description: Returns the listings that match the criteria provided by the requests parameter
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/listings-descriptor'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/maxResults'
        - $ref: 'parameters.yaml#/components/parameters/startResults'
        - $ref: 'parameters.yaml#/components/parameters/categoryId'
        ##NOTE: Didn't add region parameter since I find it unneccessary for when searching your own listin gs


  ## NOTE: Listings owned by the user cannot be saved!! (hence listings-public instead of listings-private)
  /account/saved-listings/search:
    get:
      operationId: searchSavedListings
      summary: searchSavedListings
      description: Returns the user's saved listings
      responses:
        '501':
          description: This action is not yet supported
      #   '200': # Success
      #     $ref: 'responses.yaml#/components/responses/listings-public'
      #   '400':
      #     $ref: 'responses.yaml#/components/responses/bad-request'
      # parameters:
      #   - $ref: 'parameters.yaml#/components/parameters/maxResults'
      #   - $ref: 'parameters.yaml#/components/parameters/startResults'
      #   - $ref: 'parameters.yaml#/components/parameters/categoryId'
      #   - $ref: 'parameters.yaml#/components/parameters/region'


  ## Potential Unsuspecting Vulnerability (Make sure to validate that the listing
  ## that is saved is public) -- otherwise adversary has access to archived listings
  ## NOTE: This isn't a create endpoint, but it's just to keep with the format
  /account/saved-listings/create:
    post:
      operationId: createSavedListing
      summary: createSavedListing
      description: Saves a listing
      responses:
        '501':
          description: This action is not yet supported
      #   '201': # Succesfully created
      #     $ref: 'responses.yaml#/components/responses/listing-save'
      #   '400': # Bad Request
      #     $ref: 'responses.yaml#/components/responses/bad-request'
      #   '404': # Not Found
      #     $ref: 'responses.yaml#/components/responses/not-found'
      #   '409': # Conflict
      #     $ref: 'responses.yaml#/components/responses/conflict-save'
      # parameters:
      #   - $ref: 'parameters.yaml#/components/parameters/listingID'


  /account/saved-listings/delete:
    post:
      operationId: deleteSavedListing
      summary: deleteSavedListing
      description: Un-saves a listing
      responses:
        '501':
          description: This action is not yet supported
      #   '200': # Success
      #     $ref: 'responses.yaml#/components/responses/listing-forget'
      #   '400': # Bad Request
      #     $ref: 'responses.yaml#/components/responses/bad-request'
      #   '401': # Unauthorised
      #     $ref: 'responses.yaml#/components/responses/unauthorised'
      #   '404': # Not Found
      #     $ref: 'responses.yaml#/components/responses/not-found'
      # parameters:
      #   - $ref: 'parameters.yaml#/components/parameters/listingID'


  /account/addresses/list:
    get:
      operationId: getAccountAddresses
      summary: getAccountAddresses
      description: Returns the user's previously used/saved addresses
      responses:
        '200':
          $ref: 'responses.yaml#/components/responses/account-address-list'





  ## NOTE: /account/reset-request and /account/reset-execute endpoints have been eliminated
  ## --> IF you are logged in and want to perform some password modification, please use the 
  ## endpoint /account/modify which can modify passwords, names, age, email etc.






  #NOTE: I've deleted single-variable modification paths into a generic path that handles all modification

  ################################ LISTINGS ######################################################
  ## Some of the below functionality does not require authentication - hence the missing 401, 403 codes
  /listing/view:
    get:
      operationId: getListingByID
      summary: getListingByID
      description: Returns the listing which matches the value of the parameter "listingId"
      security: []
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/listing-public'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/listingID'


  /listings/search:
    get:
      operationId: searchListings
      summary: searchListings
      description: Returns the listings that match the criteria provided by the requests parameter
      security: [] # TODO make this authentication optional
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/listings-descriptor'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401':
          $ref: 'responses.yaml#/components/responses/unauthorised-optional'
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/maxResults'
        - $ref: 'parameters.yaml#/components/parameters/startResults'
        - $ref: 'parameters.yaml#/components/parameters/categoryId'
        - $ref: 'parameters.yaml#/components/parameters/region'


  /listing/create:
    put:
      operationId: createListing
      summary: createListing
      description: Creates a new listing
      responses: 
        '201': # Successfully Created
          $ref: 'responses.yaml#/components/responses/listing-create'
        '401': # Unauthorized
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404':
          $ref: 'responses.yaml#/components/responses/not-found-auxiliary'
        '422':
          $ref: 'responses.yaml#/components/responses/unprocessable-media'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/listing-create'


  /listing/modify:
    patch:
      operationId: modifyListing
      summary: modifyListing
      description: Modifies the listings
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/listing-modify'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
        '422':
          $ref: 'responses.yaml#/components/responses/unprocessable-media'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/listing-modify'


  /listing/close:
    patch:
      operationId: closeListing
      summary: closeListing
      description: Closes a listing (i.e. is no longer available to the public, but the user is still able to see it)
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/listing-close'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
        '409': # Conflict
          $ref: 'responses.yaml#/components/responses/conflict-close'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/listing-close'



  ####################################### CONVERSATION ###################################

  # A conversation is uniquely created by the set {buyerID, listingID}
  # -> sellerID is implied from listingID,
  # -> buyerID is defined by the account currenlty signed in

  # Once a converstaion has been created, a conversationID,
  # -> This is associated to the set that was used to create it (i.e {buyer, listing, seller})

  # NOTE: All of these will be using some authentication token (e.g. jwt)
  /conversation/create:
    put:
      operationId: createConversation
      summary: createConversation
      description: Initiates a converstaion with the seller based on a unique listingID
      responses:
        '201': # Successfully Created
          $ref: 'responses.yaml#/components/responses/conversation-create'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
        '409': # Conflict
          $ref: 'responses.yaml#/components/responses/conflict-create'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/conversation-create'


  /conversation/close:
    patch:
      operationId: closeConversation
      summary: closeConversation
      description: Closes a converstaion with the seller based on a unique conversationID
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/conversation-close'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
        '409':
          $ref: 'responses.yaml#/components/responses/conflict-close'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/conversation-close'


  /conversation/message:
    put:
      operationId: sendConversationMessage
      summary: sendConversationMessage
      description: Sends a message to a conversation via it's conversationID
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/conversation-message'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'
        '422':
          $ref: 'responses.yaml#/components/responses/unprocessable-media'
      requestBody:
        $ref: 'requestBodies.yaml#/components/requestBodies/conversation-message'


  /conversations:
    get:
      operationId: getConversationDescriptors
      summary: getConversationDescriptors
      description: Returns descriptors of conversations that the user still has open
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/conversation-descriptors'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/startResults'
        - $ref: 'parameters.yaml#/components/parameters/maxResults'


  /conversation/view:
    get:
      operationId: getConversationByID
      summary: getConversationByID
      description: Returns the conversation of a given conversationID
      responses:
        '200': # Success
          $ref: 'responses.yaml#/components/responses/conversation-view'
        '400': # Bad Request
          $ref: 'responses.yaml#/components/responses/bad-request'
        '401': # Unauthorised
          $ref: 'responses.yaml#/components/responses/unauthorised'
        '404': # Not Found
          $ref: 'responses.yaml#/components/responses/not-found'     
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/conversationID'
        - $ref: 'parameters.yaml#/components/parameters/startResults'
        - $ref: 'parameters.yaml#/components/parameters/maxResults'



########################### SECURITY SCHEME OBJECT ##############################
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

